{"version":3,"sources":["WeatherCard.js","App.js","index.js"],"names":["WeatherCard","_ref","data","_jsx","Card","elevation","children","_jsxs","CardContent","Box","sx","display","alignItems","mb","weather","weatherId","iconProps","size","color","WiThunderstorm","WiRain","WiSnow","WiFog","WiDaySunny","WiCloudy","getWeatherIcon","id","ml","Typography","variant","component","name","description","main","Math","round","temp","justifyContent","humidity","wind","speed","App","mode","setMode","useState","weatherData","setWeatherData","error","setError","theme","React","useMemo","createTheme","palette","primary","background","default","paper","components","MuiCard","styleOverrides","root","borderRadius","boxShadow","transition","transform","useEffect","fetchWeatherData","async","response","fetch","ok","Error","json","err","console","interval","setInterval","clearInterval","ThemeProvider","CssBaseline","minHeight","bgcolor","AppBar","position","Toolbar","flexGrow","IconButton","onClick","toggleColorMode","prevMode","Brightness7","Brightness4","Container","py","align","gutterBottom","gap","gridTemplateColumns","xs","sm","md","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.591cab45.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box } from '@mui/material';\nimport { WiDaySunny, WiCloudy, WiRain, WiSnow, WiThunderstorm, WiFog } from 'weather-icons-react';\n\nfunction WeatherCard({ data }) {\n  if (!data) return null;\n\n  const getWeatherIcon = (weatherId) => {\n    const iconProps = { size: 48, color: '#1976d2' };\n    \n    if (weatherId >= 200 && weatherId < 300) return <WiThunderstorm {...iconProps} />;\n    if (weatherId >= 300 && weatherId < 600) return <WiRain {...iconProps} />;\n    if (weatherId >= 600 && weatherId < 700) return <WiSnow {...iconProps} />;\n    if (weatherId >= 700 && weatherId < 800) return <WiFog {...iconProps} />;\n    if (weatherId === 800) return <WiDaySunny {...iconProps} />;\n    if (weatherId > 800) return <WiCloudy {...iconProps} />;\n    \n    return <WiDaySunny {...iconProps} />;\n  };\n\n  return (\n    <Card elevation={3}>\n      <CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          {data.weather && data.weather[0] && getWeatherIcon(data.weather[0].id)}\n          <Box sx={{ ml: 2 }}>\n            <Typography variant=\"h6\" component=\"div\">\n              {data.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {data.weather && data.weather[0] ? data.weather[0].description : ''}\n            </Typography>\n          </Box>\n        </Box>\n\n        <Typography variant=\"h4\" component=\"div\" sx={{ mb: 2 }}>\n          {data.main ? `${Math.round(data.main.temp)}Â°C` : ''}\n        </Typography>\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Humidity: {data.main ? `${data.main.humidity}%` : ''}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Wind: {data.wind ? `${data.wind.speed} m/s` : ''}\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default WeatherCard;\n","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider, createTheme, CssBaseline, IconButton, Box, Container, AppBar, Toolbar, Typography } from '@mui/material';\nimport { Brightness4, Brightness7 } from '@mui/icons-material';\nimport WeatherCard from './WeatherCard';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [weatherData, setWeatherData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n            ? {\n                primary: {\n                  main: '#1976d2',\n                },\n                background: {\n                  default: '#f5f5f5',\n                  paper: '#ffffff',\n                },\n              }\n            : {\n                primary: {\n                  main: '#90caf9',\n                },\n                background: {\n                  default: '#121212',\n                  paper: '#1e1e1e',\n                },\n              }),\n        },\n        components: {\n          MuiCard: {\n            styleOverrides: {\n              root: {\n                borderRadius: 12,\n                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n                transition: 'all 0.3s ease-in-out',\n                '&:hover': {\n                  transform: 'translateY(-4px)',\n                  boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)',\n                },\n              },\n            },\n          },\n        },\n      }),\n    [mode],\n  );\n\n  const toggleColorMode = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/data');\n        if (!response.ok) {\n          throw new Error('Failed to fetch weather data');\n        }\n        const data = await response.json();\n        setWeatherData(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching weather data:\", err);\n        setError(\"Failed to fetch weather data. Please try again later.\");\n      }\n    };\n\n    fetchWeatherData();\n    const interval = setInterval(fetchWeatherData, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ \n        minHeight: '100vh',\n        bgcolor: 'background.default',\n        color: 'text.primary'\n      }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Weather in Ukraine\n            </Typography>\n            <IconButton onClick={toggleColorMode} color=\"inherit\" size=\"large\">\n              {mode === 'dark' ? <Brightness7 /> : <Brightness4 />}\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Container sx={{ py: 4 }}>\n          {error ? (\n            <Typography color=\"error\" align=\"center\" gutterBottom>\n              {error}\n            </Typography>\n          ) : (\n            <Box\n              sx={{\n                display: 'grid',\n                gap: 3,\n                gridTemplateColumns: {\n                  xs: '1fr',\n                  sm: 'repeat(2, 1fr)',\n                  md: 'repeat(3, 1fr)',\n                }\n              }}\n            >\n              {weatherData.map((data, index) => (\n                <WeatherCard key={data.id || index} data={data} />\n              ))}\n            </Box>\n          )}\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@mui/material/styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}