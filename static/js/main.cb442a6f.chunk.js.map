{"version":3,"sources":["WeatherCard.js","theme.js","App.js","index.js"],"names":["WeatherCard","_ref","data","theme","useTheme","_jsx","Card","children","_jsxs","CardContent","Box","sx","display","alignItems","mb","main","Cloud","fontSize","color","palette","primary","WbSunny","Grain","getWeatherIcon","weather","ml","Typography","variant","component","fontWeight","name","description","dark","Math","round","temp","flexDirection","gap","Opacity","light","humidity","Air","wind","speed","createTheme","secondary","background","default","paper","typography","fontFamily","h6","letterSpacing","body1","body2","components","MuiCard","styleOverrides","root","borderRadius","boxShadow","transition","transform","MuiAppBar","CITIES","App","weatherData","setWeatherData","useState","error","setError","API_KEY","process","fetchWeatherData","useCallback","async","promises","map","city","axios","get","responses","Promise","all","response","console","useEffect","interval","setInterval","clearInterval","ThemeProvider","minHeight","backgroundColor","pb","AppBar","position","elevation","Toolbar","Container","mt","align","Grid","container","spacing","index","item","xs","sm","md","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb442a6f.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, useTheme } from '@mui/material';\nimport { Cloud, WbSunny, Grain, Opacity, Air } from '@mui/icons-material';\n\nfunction WeatherCard({ data }) {\n  const theme = useTheme();\n\n  const getWeatherIcon = (main) => {\n    switch (main) {\n      case 'Clouds':\n        return <Cloud sx={{ fontSize: 40, color: theme.palette.primary.main }} />;\n      case 'Clear':\n        return <WbSunny sx={{ fontSize: 40, color: theme.palette.primary.main }} />;\n      case 'Rain':\n        return <Grain sx={{ fontSize: 40, color: theme.palette.primary.main }} />;\n      default:\n        return <Cloud sx={{ fontSize: 40, color: theme.palette.primary.main }} />;\n    }\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Box sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          mb: 2 \n        }}>\n          {getWeatherIcon(data.weather[0].main)}\n          <Box sx={{ ml: 2 }}>\n            <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 'bold' }}>\n              {data.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {data.weather[0].description}\n            </Typography>\n          </Box>\n        </Box>\n\n        <Typography variant=\"h4\" component=\"div\" sx={{ \n          mb: 2,\n          fontWeight: 'medium',\n          color: theme.palette.primary.dark\n        }}>\n          {Math.round(data.main.temp)}°C\n        </Typography>\n\n        <Box sx={{ \n          display: 'flex', \n          flexDirection: 'column', \n          gap: 1 \n        }}>\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center',\n            gap: 1\n          }}>\n            <Opacity sx={{ color: theme.palette.primary.light }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Вологість: {data.main.humidity}%\n            </Typography>\n          </Box>\n\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center',\n            gap: 1\n          }}>\n            <Air sx={{ color: theme.palette.primary.light }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Вітер: {data.wind.speed} м/с\n            </Typography>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default WeatherCard;\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n      light: '#42a5f5',\n      dark: '#1565c0',\n    },\n    secondary: {\n      main: '#9c27b0',\n      light: '#ba68c8',\n      dark: '#7b1fa2',\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#ffffff',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h6: {\n      fontWeight: 500,\n      fontSize: '1.25rem',\n      letterSpacing: '0.0075em',\n    },\n    body1: {\n      fontSize: '1rem',\n      letterSpacing: '0.00938em',\n    },\n    body2: {\n      fontSize: '0.875rem',\n      letterSpacing: '0.01071em',\n    },\n  },\n  components: {\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: 12,\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\n          '&:hover': {\n            transform: 'translateY(-4px)',\n            boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)',\n          },\n        },\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { ThemeProvider } from '@mui/material/styles';\nimport WeatherCard from './WeatherCard';\nimport { AppBar, Toolbar, Typography, Container, Grid, Box } from '@mui/material';\nimport theme from './theme';\n\nconst CITIES = [\"Kyiv\", \"Lviv\", \"Odesa\", \"Dnipro\", \"Kharkiv\"];\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState([]);\n  const [error, setError] = useState(null);\n\n  const API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n  const fetchWeatherData = useCallback(async () => {\n    if (!API_KEY) {\n      setError(\"API key is not configured\");\n      return;\n    }\n\n    try {\n      const promises = CITIES.map(city =>\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric&lang=en`)\n      );\n      \n      const responses = await Promise.all(promises);\n      setWeatherData(responses.map(response => response.data));\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(\"Unable to fetch weather data. Please try again later.\");\n    }\n  }, [API_KEY]);\n\n  useEffect(() => {\n    fetchWeatherData();\n    const interval = setInterval(fetchWeatherData, 10000);\n    return () => clearInterval(interval);\n  }, [fetchWeatherData]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ \n        minHeight: '100vh',\n        backgroundColor: 'background.default',\n        pb: 4\n      }}>\n        <AppBar position=\"static\" elevation={0}>\n          <Toolbar>\n            <Typography \n              variant=\"h6\" \n              component=\"div\"\n              sx={{ \n                fontWeight: 'bold',\n                letterSpacing: 1\n              }}\n            >\n              Погода України\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Container sx={{ mt: 4 }}>\n          {error && (\n            <Typography \n              color=\"error\" \n              align=\"center\" \n              sx={{ mb: 2 }}\n            >\n              {error}\n            </Typography>\n          )}\n          <Grid container spacing={3}>\n            {weatherData.map((data, index) => (\n              <Grid item xs={12} sm={6} md={4} key={index}>\n                <WeatherCard data={data} />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from './theme';\nimport { ThemeProvider } from '@mui/material/styles';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}